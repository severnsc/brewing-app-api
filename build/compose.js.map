{"version":3,"sources":["../compose.js"],"names":["core","hashPassword","getUser","getUserUseCase","createUser","createUserUseCase","updateUser","updateUserUseCase","authenticateUser","authenticateUserUseCase","deleteUser","deleteUserUseCase","getTimer","getTimerUseCase","createTimer","createTimerUseCase","startTimer","startTimerUseCase","stopTimer","stopTimerUseCase","decrementTimer","decrementTimerUseCase","resetTimer","resetTimerUseCase","updateTimer","updateTimerUseCase","deleteTimer","deleteTimerUseCase","getTimersByUserId","getTimersByUserIdUseCase","createInventory","createInventoryUseCase","updateInventory","updateInventoryUseCase","deleteInventory","deleteInventoryUseCase","getInventoriesByUserId","getInventoriesByUserIdUseCase","getInventory","getInventoryUseCase","getTimerAlert","getTimerAlertUseCase","createTimerAlert","createTimerAlertUseCase","updateTimerAlert","updateTimerAlertUseCase","activateTimerAlert","activateTimerAlertUseCase","deactivateTimerAlert","deactivateTimerAlertUseCase","deleteTimerAlert","deleteTimerAlertUseCase","getTimerAlertsByTimerId","getTimerAlertsByTimerIdUseCase","getInventoryItem","getInventoryItemUseCase","createInventoryItem","createInventoryItemUseCase","updateInventoryItem","updateInventoryItemUseCase","deleteInventoryItem","deleteInventoryItemUseCase","decrementTimers","catch","e","startedTimers","promises","map","timer","id","Date","now","Promise","all","decrementedTimers","forEach","timerAlerts","timerAlertsToActivate","filter","alert","activationTime","remainingDuration","console","error"],"mappings":"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","file":"compose.js","sourcesContent":["import * as core from \"brewing-app-logic\"\n\nimport {\n  findUserById,\n  findUserByUsername,\n  userExists,\n  saveUser,\n  isUsernameUnique,\n  isEmailUnique,\n  _createUser,\n  _deleteUser,\n  hashPassword,\n  compareHash\n} from './adapters/userAdapter'\n\nimport {\n  _createTimer,\n  findTimersByUserId,\n  findTimerById,\n  findStartedTimers,\n  saveTimer,\n  _deleteTimer\n} from './adapters/timerAdapter'\n\nimport {\n  _createInventory,\n  saveInventory,\n  _deleteInventory,\n  findInventoriesByUserId,\n  findInventoryById\n} from './adapters/inventoryAdapter'\n\nimport {\n  _createInventoryItem,\n  addToInventory,\n  findInventoryItemById,\n  saveInventoryItem,\n  _deleteInventoryItem\n} from './adapters/inventoryItemAdapter'\n\nimport {\n  findTimerAlertsByTimerId,\n  findTimerAlertById,\n  saveTimerAlert,\n  _createTimerAlert,\n  _deleteTimerAlert\n} from './adapters/timerAlertsAdapter'\n\nimport { sendMessage } from './adapters/messagingAdapter'\n\nexport { hashPassword }\n\n//User\nexport const getUser = core.getUserUseCase(findUserById)\nexport const createUser = core.createUserUseCase(isUsernameUnique)(isEmailUnique)(_createUser)(hashPassword)\nexport const updateUser = core.updateUserUseCase(findUserById)(isUsernameUnique)(isEmailUnique)(saveUser)\nexport const authenticateUser = core.authenticateUserUseCase(findUserByUsername)(compareHash)\nexport const deleteUser = core.deleteUserUseCase(_deleteUser)\n\n//Timer\nexport const getTimer = core.getTimerUseCase(findTimerById)\nexport const createTimer = core.createTimerUseCase(_createTimer)\nexport const startTimer = core.startTimerUseCase(findTimerById)(saveTimer)\nexport const stopTimer = core.stopTimerUseCase(findTimerById)(saveTimer)\nexport const decrementTimer = core.decrementTimerUseCase(findTimerById)(saveTimer)\nexport const resetTimer = core.resetTimerUseCase(findTimerById)(saveTimer)\nexport const updateTimer = core.updateTimerUseCase(findTimerById)(saveTimer)\nexport const deleteTimer = core.deleteTimerUseCase(_deleteTimer)\nexport const getTimersByUserId = core.getTimersByUserIdUseCase(userExists)(findTimersByUserId)\n\n//Inventory\nexport const createInventory = core.createInventoryUseCase(_createInventory)\nexport const updateInventory = core.updateInventoryUseCase(findInventoryById)(saveInventory)\nexport const deleteInventory = core.deleteInventoryUseCase(_deleteInventory)\nexport const getInventoriesByUserId = core.getInventoriesByUserIdUseCase(userExists)(findInventoriesByUserId)\nexport const getInventory = core.getInventoryUseCase(findInventoryById)\n\n//Timer Alert\nexport const getTimerAlert = core.getTimerAlertUseCase(findTimerAlertById)\nexport const createTimerAlert = core.createTimerAlertUseCase(_createTimerAlert)\nexport const updateTimerAlert = core.updateTimerAlertUseCase(findTimerAlertById)(saveTimerAlert)\nexport const activateTimerAlert = core.activateTimerAlertUseCase(findTimerAlertById)(saveTimerAlert)(sendMessage)\nexport const deactivateTimerAlert = core.deactivateTimerAlertUseCase(findTimerAlertById)(saveTimerAlert)\nexport const deleteTimerAlert = core.deleteTimerAlertUseCase(_deleteTimerAlert)\nexport const getTimerAlertsByTimerId = core.getTimerAlertsByTimerIdUseCase(findTimerAlertsByTimerId)\n\n//Inventory Item\nexport const getInventoryItem = core.getInventoryItemUseCase(findInventoryItemById)\nexport const createInventoryItem = core.createInventoryItemUseCase(_createInventoryItem)(addToInventory)\nexport const updateInventoryItem = core.updateInventoryItemUseCase(findInventoryItemById)(saveInventoryItem)\nexport const deleteInventoryItem = core.deleteInventoryItemUseCase(_deleteInventoryItem)\n\nexport const decrementTimers = async () => {\n  const startedTimers = await findStartedTimers().catch(e => e)\n  const promises = startedTimers.map(timer => decrementTimer(timer.id, Date.now()))\n  const decrementedTimers = await Promise.all(promises)\n  decrementedTimers.forEach(async timer => {\n    const timerAlerts = await findTimerAlertsByTimerId(timer.id)\n    const timerAlertsToActivate = timerAlerts.filter(alert => alert.activationTime === timer.remainingDuration)\n    timerAlertsToActivate.forEach(alert => activateTimerAlert(alert.id).catch(e => console.error(e)))\n  })\n}"]}