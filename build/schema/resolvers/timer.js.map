{"version":3,"sources":["../../../schema/resolvers/timer.js"],"names":["id","timer","user","userId","name","duration","remainingDuration","intervalDuration","isRunning","timerAlerts"],"mappings":";;;;;;AAAA;;kBAEe;AACbA,MAAI;AAAA,WAASC,MAAMD,EAAf;AAAA,GADS;AAEbE,QAAM;AAAA,WAAS,sBAAQD,MAAME,MAAd,CAAT;AAAA,GAFO;AAGbC,QAAM;AAAA,WAASH,MAAMG,IAAf;AAAA,GAHO;AAIbC,YAAU;AAAA,WAASJ,MAAMI,QAAf;AAAA,GAJG;AAKbC,qBAAmB;AAAA,WAASL,MAAMK,iBAAf;AAAA,GALN;AAMbC,oBAAkB;AAAA,WAASN,MAAMM,gBAAf;AAAA,GANL;AAObC,aAAW;AAAA,WAASP,MAAMO,SAAf;AAAA,GAPE;AAQbC,eAAa;AAAA,WAAS,sCAAwBR,MAAMD,EAA9B,CAAT;AAAA;AARA,C","file":"timer.js","sourcesContent":["import { getUser, getTimerAlertsByTimerId } from '../../compose'\n\nexport default {\n  id: timer => timer.id,\n  user: timer => getUser(timer.userId),\n  name: timer => timer.name,\n  duration: timer => timer.duration,\n  remainingDuration: timer => timer.remainingDuration,\n  intervalDuration: timer => timer.intervalDuration,\n  isRunning: timer => timer.isRunning,\n  timerAlerts: timer => getTimerAlertsByTimerId(timer.id)\n}"]}